@import '../../../scss/defaults';

[data-kd-handle='gallery'] {
	@each $theme, $color in $theme-colors {
		&[data-kd-theme='#{$theme}'] {
			//colour preloader based on theme
			.preload {
				@include background-svg(
					'<svg width="38" height="38" viewBox="0 0 38 38" xmlns="http://www.w3.org/2000/svg" stroke="#{rgba(color-yiq(map-get($theme-colors, #{$theme})), .5)}"><g fill="none" fill-rule="evenodd"><g transform="translate(1 1)" stroke-width="2"><circle stroke-opacity=".5" cx="18" cy="18" r="18"/><path d="M36 18c0-9.94-8.06-18-18-18"><animateTransform attributeName="transform" type="rotate" from="0 18 18" to="360 18 18" dur="1s" repeatCount="indefinite"/></path></g></g></svg>'
				);
			}
		}
	}

	.reveal {
		transition: height 250ms ease-out;
		height: 500px;
		overflow: hidden;

		//background-color: green;
		&.preload {
			background-position: center center;
			background-repeat: no-repeat;
			background-size: 38px 38px;
		}
	}

	.gallery-item {
		//background-color: green;
		margin: ($grid-gutter-width / 4) ($grid-gutter-width / 4) ($grid-gutter-width / 2) ($grid-gutter-width / 4);

		img {
			width: 100%;
		}

		&[data-toggle='modal'] {
			position: relative;
			overflow: hidden;

			img {
				transition: transform 0.15s ease-in-out;
			}

			@include hover {
				&::after {
					opacity: 1;
					cursor: pointer;
				}

				&::before {
					opacity: 1;
					transform: translateX(-50%) translateY(-50%);
				}

				img {
					transform: scale(1.1);
				}
			}

			&::after {
				display: block;
				content: '';
				background-color: rgba(black, 0.65);
				transition: $transition-fade;
				opacity: 0;
				position: absolute;
				top: 0px;
				left: 0px;
				bottom: 0px;
				right: 0px;
			}

			&::before {
				display: block;
				content: '';
				width: 24px;
				height: 24px;
				background-position: center center;
				background-repeat: no-repeat;
				background-size: 24px 24px;
				@include background-svg('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#{$white}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-eye"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>');
				position: absolute;
				top: calc(50%);
				left: calc(50%);
				z-index: 10;
				transition: all 0.15s ease-out;
				transform: translateX(-50%) translateY(50%);
				opacity: 0;
			}
		}
	}

	.modal-content {
		pointer-events: auto;
		background-color: transparent;
		background-clip: padding-box;
		border: none;
		border-radius: 0.3rem;
		outline: none;
		border-radius: 0;
		box-shadow: 0px 0px 30px #000;

		.close {
			display: block;
			width: 28px;
			height: 28px;
			background-color: rgba(black, 0.7);
			position: absolute;
			top: map-get($spacers, 3);
			right: map-get($spacers, 3);
			opacity: 1;
			border-radius: 50%;
			background-position: center center;
			background-repeat: no-repeat;
			background-size: 24px 24px;
			@include background-svg('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#{$white}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x-circle"><circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line></svg>');

			&:focus {
				outline: 0;
				box-shadow: 0 0 6px $primary;
			}
		}
	}
}

body.modal104-modal {
	.modal-backdrop.show {
		opacity: 0.9;
	}
}
