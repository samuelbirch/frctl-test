
{# require plugins:
	- marionnewlevant/twig-perversion
#}

{# public functions #}
{% macro field(props, account) %}
	{% if props.type == "textarea" %}
		{{ _self.textarea(props, account) }}
	{% elseif props.type == "checkbox" %}
		{{ _self.checkbox(props, account) }}
	{% elseif props.type == "radio_group" %}
		{{ _self.radio(props, account) }}
	{% elseif props.type == "textarea" %}
		{{ _self.input(props, account) }}
	{% endif %}
{% endmacro %}

{# input #}
{% macro input(props, account) %}
	
	{{ _self.prefix(props) }}
	{% if props.button is defined or props.prepend is defined %}
	<div class="input-group {{ props.inputGroupClass ?? 'pl-md-3' }}">
		{% if props.prepend is defined %}
			<div class="input-group-prepend">
				<div class="input-group-text bg-transparent"><span class="small text-muted">{{ props.prepend }}</span></div>
			</div>
		{% endif %}
	{% endif %}
		<input {{ _self.attr(props) }} >
	{% if props.button is defined  or props.prepend is defined %}
		{% if props.button is defined %}
			<div class="input-group-append">
				<button class="btn btn-primary" id="{{ props.id }}-btn">{{ props.button }}</button>
			</div>
		{% endif %}
	</div>
	{% endif %}
	{{ _self.suffix(props) }}
{% endmacro %}

{# password #}
{% macro password(props, account) %}
	
	{{ _self.prefix(props) }}
	<div class="pwd-show" data-mod="showPassword">
		<input {{_self.attr(props|merge({type:'password'}))}}>
		<span class="btn btn-sm">
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor"
			stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-eye-off">
				<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path>
				<line x1="1" y1="1" x2="23" y2="23"></line>
			</svg>
		</span>
	{% if props.help is defined %}<small class="form-text text-muted">{{ props.help }}</small>{% endif %}
		<div class="invalid-feedback">{{ (props.error ?? props.validation ?? '')|raw }}</div>
	</div>
	{% if props.indicator %}
	<small class="form-text text-muted mb-1">Password Strength: <span class="meter-text"></span></small>
	<div class="progress" style="height: 5px;">
		<div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
	</div>
	{% endif %}
	</div>
{% endmacro %}

{# text #}
{% macro textarea(props, account) %}
	
	{{ _self.prefix(props) }}
		<textarea {{_self.attr(props) }}
			rows="{{ props.rows ?? 4 }}"
		>{{ props.value }}</textarea>
	{{ _self.suffix(props) }}
{% endmacro %}

{% macro checkbox(props, account) %}
	

	<div class="form-group {{ props.width }} {{  props.error ? 'is-invalid':'' }}">
		<div class="custom-control custom-checkbox">
			{# <input {{ self.attr(props|merge({type:'checkbox',class:'custom-control-input'}))}}> #}
			<input type="checkbox" class="custom-control-input" id="{{ props.id }}" name="{{ props.name }}" value="1" {{ props.checked ? 'checked' }}>
			{# <label class="custom-control-label" for="{{ props.id }}">{{ props.label ?? '' }}</label> #}
			{% if  props.label %}<label for="{{ props.id }}" class="{{  props.horizontal ? 'col-2' }} custom-control-label {{ props.labelClass ?? '' }}">{{  props.label }} {% if props.required is not defined or not props.required %}<span class="text-muted font-weight-normal small">- optional</span>{% endif %}</label>{% endif %}

		</div>
	{% if props.help is defined %}<small class="form-text text-muted">{{ props.help }}</small>{% endif %}
		<div class="invalid-feedback">{{ (props.error ?? props.validation ?? '')|raw }}</div>
	</div>
{% endmacro %}

{# file #}
{% macro file(props, account) %}
	
	{{ _self.prefix(props) }}
		<input {{_self.attr(props|merge({type:'file'}))}} >
		<label class="custom-file-label" for="{{ props.id }}">{{ props.placeholder ?? '' }}</label>
	{{ _self.suffix(props) }}
{% endmacro %}

{# select #}
{# 
	standard:
	options: [
		value: label,
	]

	grouped:
	options: [
		name: [
			value: label,
		]
	]
#}
{% macro select(props, account) %}

	
	{{ _self.prefix(props) }}
		<select {{ _self.attr(props) }}>
			<option value="" selected disabled>Please select</option>
			{% for key, value in props.options %}
				{% if value is iterable %}
				<optgroup label="{{ key }}">
					{% for k, val in value %}
						{% set k = k|replace('_','') %}
						<option value="{{ k }}" {{ k == props.value ? 'selected' }}>{{ val }}</option>
					{% endfor %}
				</optgroup>
				{% else %}
				{% set key = key|replace('_','') %}
				<option value="{{ key }}" {{ key == props.value ? 'selected' }}>{{ value }}</option>
				{% endif %}
			{% endfor %}
		</select>
	{{ _self.suffix(props) }}
{% endmacro %}

{# e.g. {{ form.btn( 'Submit',{style: 'primary',type:'submit'}) }} #}
{% macro btn(text, props) %}
	
	{% set style = props.style ?? 'primary' %}
	{% set class = props.class ?? '' %}
	{% set type = props.type ?? 'submit' %}
	{% set disabled = props.disabled ?? false %}
	<button type="{{ type }}" class="btn btn-{{ style }} {{ class }}" {{ disabled ? 'disabled' }} 
	{% if props.data is defined %}{% for key, data in props.data %}data-{{ key }}="{{ data }}" {% endfor %}{% endif %}>
		<span class="spinner-border spinner-border-sm mr-1" role="status" aria-hidden="true"></span>
		<span>{{ text }}</span>
	</button>
{% endmacro %}

{% macro radio(props) %}
	
		{% set error = props.error ?? null %}
		<div class="form-group {{ props.width }} {{  error ? 'is-invalid':'' }}">
			<label class="{{ props.labelClass ?? 'font-weight-bold small' }}">{{ props.label }}{% if props.required is not defined or not props.required %}<span class="text-muted font-weight-normal small">- optional</span>{% endif %}</label>
			{% for option in props.options %}
				<div class="custom-control custom-radio">
					<input class="custom-control-input" type="radio" name="{{ props.name }}" id="{{ props.id ~ '-' ~ loop.index }}" value="{{ option.value }}" {{ option.checked ? 'checked'}}>
					<label class="custom-control-label {{ props.labelClass ?? '' }}" for="{{ props.id ~ '-' ~ loop.index }}">{{ option.label }}</label>
				</div>
			{% endfor %}
			{% if props.help is defined %}<small class="form-text text-muted">{{ props.help }}</small>{% endif %}
			<div class="invalid-feedback">{{ (error ?? props.validation ?? '')|raw }}</div>
		</div>
{% endmacro %}


{# private functions #}



{% macro prefix(props) %}
		{% if props.group ?? true %}<div class="form-group {{  props.horizontal ? 'row' }} {{ props.width ?? '' }} {{ props.class ?? '' }} {{  props.error ? 'is-invalid':'' }}" {{ props.indicator ? 'data-mod="passwordMeter"'}}>{% endif %}
		{# <div class="form-group {{  props.horizontal ? 'row' }} {{ props.width ?? '' }} {{ props.class ?? '' }} {{  props.error ? 'is-invalid':'' }}" {{ props.indicator ? 'data-mod="passwordMeter"'}}> #}
		{% if  props.label %}<label for="{{ props.id }}" class="{{  props.horizontal ? 'col-2' }} {{ props.labelClass ?? 'font-weight-bold small' }}">{{  props.label }} {% if props.required is not defined or not props.required %}<span class="text-muted font-weight-normal small">- optional</span>{% endif %}</label>
		{% if props.horizontal %}<div class="col-10">{% endif %}{% endif %}
{% endmacro %}

{% macro suffix(props) %}
		{% if props.help is defined %}<small class="form-text text-muted">{{ props.help }}</small>{% endif %}
		<div class="invalid-feedback">{{ (props.error ?? props.validation ?? '')|raw }}</div>
	{% if  props.label and props.horizontal %}</div>{% endif %}
	{% if props.group ?? true %}</div>{% endif %}
{% endmacro %}

{% macro attr(props) %}
	class="{{ props.inputClass ?? 'form-control form-control-lg' }} {{  props.error ? 'is-invalid':'' }}" 
	type="{{  props.type ?? 'text' }}" 
	value="{{  props.value ?? '' }}" 
	id="{{  props.id ?? props.name ?? '' }}" 
	name="{{  props.name ?? '' }}" 
	placeholder="{{ props.placeholder ?? '' }}" 
	{{ props.readonly is defined and props.readonly ? 'readonly' }}
	{{ props.required is defined and props.required ? 'required'}}
	{% if props.pattern is defined %}pattern="{{ props.pattern }}"{% endif %}
	{% if props.title is defined %}title="{{ props.title }}"{% endif %}
	{% if props.data is defined %}{% for key, data in props.data %}data-{{ key }}="{{ data }}" {% endfor %}{% endif %}
	{% if props.aria is defined %}{% for key, data in props.aria %}aria-{{ key }}="{{ data }}" {% endfor %}{% endif %}
{% endmacro %}